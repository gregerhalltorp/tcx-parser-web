AWSTemplateFormatVersion: "2010-09-09"
Description: TCX Parser Stack - Certificate

Parameters:
  DomainName:
    Type: String
  SubDomain:
    Type: String
  Region:
    Type: String
    Default: "us-east-1"

Resources:
  Certificate:
    Type: Custom::Certificate
    Properties:
      DomainName: !Sub "${SubDomain}.${DomainName}"
      Region: !Ref Region
      ValidationMethod: DNS
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-certificate-provider"

  IssuedCertificate:
    Type: Custom::IssuedCertificate
    DependsOn:
      - DomainValidationRecord
    Properties:
      CertificateArn: !Ref Certificate
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-certificate-provider"

  CertificateDNSRecord:
    Type: Custom::CertificateDNSRecord
    Properties:
      CertificateArn: !Ref Certificate
      DomainName: !Sub "${SubDomain}.${DomainName}"
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:binxio-cfn-certificate-provider"

  DomainValidationRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub "${DomainName}."
      RecordSets:
        - Name: !GetAtt CertificateDNSRecord.Name
          Type: !GetAtt CertificateDNSRecord.Type
          TTL: "60"
          Weight: 1
          SetIdentifier: !Ref Certificate
          ResourceRecords:
            - !GetAtt CertificateDNSRecord.Value

Outputs:
  DNSRecord:
    Description: DNS record
    Value: !Sub "${CertificateDNSRecord.Name} ${CertificateDNSRecord.Type} ${CertificateDNSRecord.Value}"
  CertificateArn:
    Description: Issued certificate
    Value: !Ref Certificate
